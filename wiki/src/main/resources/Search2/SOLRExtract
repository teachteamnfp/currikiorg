<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Search2</web>
<name>SOLRExtract</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.adminPolx</creator>
<author>XWiki.adminPolx</author>
<customClass></customClass>
<contentAuthor>XWiki.adminPolx</contentAuthor>
<creationDate>1298699906000</creationDate>
<date>1304956279000</date>
<contentUpdateDate>1304956279000</contentUpdateDate>
<version>12.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>cli-upload.</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Search2.SOLRExtract</name>
<number>0</number>
<className>XWiki.TagClass</className>
<property>
<tags/>
</property>
</object>
<content>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;##
##
## this page should Search.SOLRExtract
##                  ===========================
## this page creates a document containing the information to be indexed.
##
## @vtlvariable name="doc" type="com.xpn.xwiki.api.Document"
## @vtlvariable name="asset" type="org.curriki.xwiki.plugin.asset.Asset"
## @vtlvariable name="document" type="com.xpn.xwiki.api.Document"
#* @vtlvariable name="xwiki" type="com.xpn.xwiki.api.XWiki" *# ##
#* @vtlvariable name="util" type="com.xpn.xwiki.api.Util" *# ##
#* @vtlvariable name="request" type="javax.servlet.http.HttpServletRequest" *# ##
#* @vtlvariable name="context" type="com.xpn.xwiki.api.Context" *# ##
#* @vtlvariable name="msg" type="com.xpn.xwiki.web.XWikiMessageTool" *# ##
##
##
## a good model is the structure of the json record returned by Search.Resources
##
## #set($ret_info = "{ 'page':'${resource.fullName}' ,
## 'title':'${ret_title}' ,'assetType':'${ret_assetType}' ,
## 'category':'${ret_category}' ,'subcategory':'${ret_subcategory}',
## 'ict':'${ret_ictRaw}' ,'ictText':'${ret_ictText}' ,'ictIcon':'${ret_ictIcon}'
## 'contributor':'${resource.creator}' ,'contributorName':'${ret_cname}' ,
## 'review':'${ret_review}' ,'rating':'${ret_rating}' ,
## 'ratingCount':'${ret_rating_count}' ,
## 'description':'${ret_desc}' ,
## 'fwItems':${ret_FW} ,'levels':${ret_lvl} ,
## 'parents':${ret_parents} ,
## 'lastUpdated':'${xwiki.formatDate($resource.date, $msg.get('mycurriki.dateFormat'))}' ,
## 'updated':'${resource.date}' } ")
##
#if(!$hasGlobalAdmin))$response.sendRedirect("/xwiki/bin/loginsubmit/XWiki/XWikiLogin")#else
&lt;!-- #set($xt=$xwiki.parseGroovyFromPage("Search2.SOLRExtractorGroovy"))##
$xt.init($xwiki,$context,$request.getParameter("doc")) Running $xt --&gt;##
#if($request.getParameter("doc"))
$response.setContentType("application/xml")
#if($xt.isApplicable())
&lt;!-- This rendering of $xt.getFullNameForComments() is created by ${doc.web}.${doc.name} --&gt;
{pre}&lt;add&gt;&lt;doc&gt;
    &lt;field name="fullname"&gt;$xt.getFullNameX()&lt;/field&gt;
    &lt;field name="name"    &gt;$xt.getNameX()&lt;/field&gt;
    &lt;field name="web"     &gt;$xt.getWebX()&lt;/field&gt;
    &lt;field name="revisionNumber"&gt;$!xt.getRevisionNumber()&lt;/field&gt;

    &lt;field name="authorCode"  &gt;$xt.getAuthorCodeX()&lt;/field&gt;
    &lt;field name="author"  &gt;$xt.getAuthorX()&lt;/field&gt;
    &lt;field name="creatorCode"&gt;$xt.getCreatorCodeX()&lt;/field&gt;
    &lt;field name="creator"&gt;$xt.getCreatorX()&lt;/field&gt;

    &lt;field name="title"&gt;$xt.getTitleX()&lt;/field&gt;
    &lt;field name="description"&gt;$xt.getDescriptionX()&lt;/field&gt;

    #foreach($i in $!xt.getICTs())
        &lt;field name="ict"&gt;$i&lt;/field&gt;
    #end
    &lt;field name="ictText"&gt;#foreach($i in $!xt.getICTs())
        $xwiki.getXMLEncoded($msg.get("CurrikiCode.AssetClass_instructional_component_${i}"))
    #end&lt;/field&gt;
    #foreach($i in $!xt.getSubjects())
        &lt;field name="subject"&gt;$xwiki.getXMLEncoded($i)&lt;/field&gt;
    #end
    &lt;field name="subjectText"&gt;#foreach($i in $!xt.getSubjects())
    $xwiki.getXMLEncoded($msg.get("CurrikiCode.AssetClass_fw_items_${i}"))
    #end&lt;/field&gt;
    #foreach($i in $!xt.getLevels())
        &lt;field name="level"&gt;$i&lt;/field&gt;
    #end
    &lt;field name="levelText"&gt;#foreach($i in $!xt.getLevels())
    $xwiki.getXMLEncoded($msg.get("CurrikiCode.AssetClass_educational_level_${i}"))
    #end&lt;/field&gt;

    &lt;field name="language"&gt;$!xt.getLanguage()&lt;/field&gt;

    &lt;field name="keywords"&gt;$xt.keywords&lt;/field&gt;
    &lt;field name="generatedKeywords"&gt;$xt.generatedKeywords&lt;/field&gt;

    #foreach($code in $xt.getStandardsCodeX())
        &lt;field name="standardsCode"&gt;$code&lt;/field&gt;
    #end #foreach($label in $xt.getStandardsLabelsX())
        &lt;field name="standardsLabel"&gt;$label&lt;/field&gt;
    #end

    &lt;!-- rights and licenses --&gt;
    &lt;field name="license"        &gt;$!xt.getLicense()&lt;/field&gt;
    &lt;field name="rights"         &gt;$!xt.getRights()&lt;/field&gt;
    &lt;field name="privateToUser"  &gt;$!xt.getPrivateToUser()&lt;/field&gt;
    &lt;field name="privateToGroup" &gt;$!xt.getPrivateToGroups()&lt;/field&gt;

    &lt;!-- types (asset-type, media-type) --&gt;
    &lt;field name="assetType"&gt;$xt.getAssetType()&lt;/field&gt;
    #if($xt.hasAttachment())
    #foreach($x in $xt.getAttachmentTypes())
     &lt;field name="attachmentType"&gt;$x&lt;/field&gt;
    #end
    &lt;!-- category --&gt;
    &lt;field name="category"&gt;$xt.getCategory()&lt;/field&gt;
    &lt;field name="subcategory"&gt;$xt.getSubCategory()&lt;/field&gt;
    &lt;!-- actual content --&gt;
    #foreach($x in $xt.getAttachmentFilenames())
    &lt;field name="attachmentFilename"&gt;$x&lt;/field&gt;
    #end
    &lt;field name="renderedContent"&gt;$xt.getRenderedContentX()&lt;/field&gt;
    #end

    &lt;!-- collections --&gt;
    #foreach($i in $!xt.getInCollection())
    &lt;field name="inCollection"   &gt;$i&lt;/field&gt;
    #end
    #foreach($i in $!xt.getInCollectionDetailsJSON())
    &lt;field name="inCollectionDetailsJSON"   &gt;$i&lt;/field&gt;
    #end
    #foreach($i in $!xt.getInCollectionRights())
    &lt;field name="inCollectionRights"   &gt;$i&lt;/field&gt;
    #end


    &lt;!-- reviews and ratings --&gt;
    &lt;field name="fileCheckStatus"&gt;$!xt.getFileCheckStatus()&lt;/field&gt;
    &lt;field name="currikiReview"  &gt;$!xt.getCurrikiReviewStatus()&lt;/field&gt;
    &lt;field name="userRating"     &gt;$!xt.getUsersRating()&lt;/field&gt;
    &lt;field name="userRatingCount"&gt;$!xt.getUsersRatingCount()&lt;/field&gt;

    &lt;field name="modificationDate"&gt;$xt.getModificationDate()&lt;/field&gt;
    &lt;field name="creationDate"    &gt;$xt.getCreationDate()&lt;/field&gt;

    &lt;field name="hiddenFromSearch"&gt;$xt.getHiddenFromSearch()&lt;/field&gt;
&lt;/doc&gt;&lt;/add&gt;
{/pre}
#else ## $xt.isApplicable()
{pre}&lt;inapplicable/&gt;

{/pre}#end
#else
 Please add doc parameter.
#end
#end</content>
</xwikidoc>
