<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Registration</web>
<name>RegistrationBootstrap</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.adminPolx</creator>
<author>XWiki.flixt</author>
<customClass></customClass>
<contentAuthor>XWiki.flixt</contentAuthor>
<creationDate>1309965611000</creationDate>
<date>1392715679000</date>
<contentUpdateDate>1392715679000</contentUpdateDate>
<version>135.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<hidden>false</hidden><attachment>
<filename>warning.png</filename>
<filesize>1535</filesize>
<author>XWiki.bobata</author>
<date>1315258862000</date>
<version>1.4</version>
<comment></comment><content>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
</content></attachment>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Registration.RegistrationBootstrap</name>
<number>0</number>
<className>XWiki.TagClass</className>
<guid>2998ff48-b442-4dec-9a91-49af304bdb8a</guid>
<property>
<tags/>
</property>
</object>
<content>#* @vtlvariable name="doc" type="com.xpn.xwiki.api.Document" *#
## @vtlvariable name="asset" type="org.curriki.xwiki.plugin.asset.Asset"
## @vtlvariable name="document" type="com.xpn.xwiki.api.Document"
#* @vtlvariable name="xwiki" type="com.xpn.xwiki.api.XWiki" *# ##
#* @vtlvariable name="util" type="com.xpn.xwiki.api.Util" *# ##
#* @vtlvariable name="request" type="javax.servlet.http.HttpServletRequest" *# ##
#* @vtlvariable name="context" type="com.xpn.xwiki.api.Context" *# ##
#* @vtlvariable name="msg" type="com.xpn.xwiki.web.XWikiMessageTool" *# ##
## this page is included by XWiki.SocialLogin, itself included by login.vm ##
## it provides the content of the dialogs following a successful authentication
## and authorization at an identity provider to request the little bit more.
## -- this page is displayed within a dialog -- no panel or anything such
## ----------------
## prepare variables
##
#set($warningFields=$tool.warningFields)##
#set($okFields=$tool.okFields)##
#if($targets)#else##
#set($targets=$xwiki.parseGroovyFromPage("Registration.TargetsGroovy"))##
#set($junk=$targets.init($request,$xwiki))##
#end
{pre}
&lt;!--
    warningFields: $warningFields
    okFields : $okFields
    errors: $tool.errors --&gt;
{/pre}
## ----------------
&lt;style type="text/css"&gt;
 {
    background-color: lightgray;
    border: 0 none lightgray;
}
body { min-width: 0pt; }
.registrationTable {
    margin: 20px auto;
    text-align: left;
    width: 425px;
}
.registrationTable p {
    height: 2em;
    padding: 3px 20px 6px 10px;
}
.registrationTable p.textfield {
    margin: 2pt;
    padding: 2pt;
}
.registrationTable p.textfield label b, .registrationTable p label b {
    float: left;
    padding: 5px;
    text-align: right;
    vertical-align: bottom;
    width: 8em;
}
.registrationTable p.textfield input {
    float: left;
    width: 20em;
}
select#memberType_input {
    float: left;
    width: 20em;
}
.warningField {
    background: url("/xwiki/skins/curriki8/warning.png") no-repeat scroll right center transparent;
    border: thin solid red;
    padding: 0 20px 5px 0;
}
.okField {
    background: url("/xwiki/skins/curriki8/ok.png") no-repeat scroll right center transparent;
    border: medium none;
}
.waiting {
    background: url("/xwiki/skins/curriki8/icons/spinner.gif") no-repeat scroll right center transparent;
    border: medium none;
}
fieldset {
    line-height: 12px;
    margin: 20px auto;
    width: 420px;
    padding: 0 20px;
}
fieldset h3 {
    color: #4E83C7;
    font: bold 16px arial,helvetica,sans-serif;
    padding: 2px 0px;
    text-align:left;
}
.warning {
    text-align: left;
    color: #666;
    font-weight: bold;
}
.email_confirmation {
    display: none;
}
&lt;/style&gt;
&lt;!-- begin javascripts --&gt;##
#set($globalDebug=true)##
{pre}
#template("javascripts.vm")##
#template("analytics.vm")##
{/pre}
## note: we do not run CurrikiApp.init()
&lt;!-- end javascripts --&gt;
&lt;!-- socialLoginTool is $tool with request of method $tool.request.method, while our request's method is $request.method
    #set($provider = $tool.providerId)--&gt;
#if($provider)#set($regMode=$provider)##
    #else#set($regMode="inCurriki")##
#end##
## ----------------
{pre}
&lt;form class="xform" action="http://$hostname/xwiki/bin/view/$doc.space/${doc.name}?#if($request.xpage)xpage=$request.xpage&amp;tempskin=curriki8#end" method="post" id="createUsernameForm"##
    onsubmit="Curriki.console.log('loading.'); Curriki.ui.login.showLoginLoading(_('loading.loading_msg')); return true;"&gt;
  &lt;div class="centered"&gt;
      &lt;fieldset&gt;
          &lt;h3&gt;$msg.get("join.member.title")&lt;/h3&gt;
          &lt;p align="left"&gt;&lt;!-- providerId: "$tool.providerId" --&gt;
              #if($tool.providerId)$msg.get("join.member.social_instructions",["$tool.providerId"])#else##
                  $msg.get("join.member.curriki_instructions")##
              #end&lt;/p&gt;
          &lt;div style="height:1em"&gt;&lt;p id="currikiRegistrationAdvice" align="left"&gt;&amp;nbsp;&lt;/p&gt;&lt;/div&gt;
          #logViewScript("/join/register/${regMode}/view")
          #if($tool.errors &amp;&amp; ! $tool.errors.isEmpty())
              &lt;ul class="warning"&gt;#foreach($m in $tool.errors)&lt;li&gt;$msg.get($m)&lt;/li&gt; #end&lt;/ul&gt;
              #logViewScript("/join/${regMode}/submit/errors")
          #end
      &lt;input type="hidden" name="xaction" value="createProfile" &gt;

          #macro(computeTrClasses $f)##
            #if($okFields.contains($f)) okField #end ##
            #if($warningFields.contains($f)) warningField #end ##
        #end##
        #if($provider &amp;&amp; $providerFields.contains($f)) disabledLook #end## &amp;&amp; $provider is validated
      &lt;div class="registrationTable"&gt;
          ##
          #set($f="username")
          &lt;p class="textfield #computeTrClasses($f)" onmouseover="Curriki.ui.login.displayInstruction('join.member_name_instructions');"&gt;
              &lt;label for="${f}_input"&gt;&lt;b&gt;$msg.get("join.member_name")&lt;/b&gt;&lt;/label&gt;
              &lt;input id="${f}_input" name="${f}" value="$!{tool.username}"##
                autocomplete="off"&gt;
          &lt;/p&gt;
          ##
          ##
          #set($f="password")
          &lt;p class="textfield #computeTrClasses($f)" onmouseover="Curriki.ui.login.displayInstruction('join.member_password_instructions');"&gt;
              &lt;label for="${f}_input"&gt;&lt;b&gt;$msg.get("join.member_password")&lt;/b&gt;&lt;/label&gt;
              &lt;input id="${f}_input" name="${f}" value="$!{tool.password}" type="password" ###
                autocomplete="off" #if($request.getHeader("User-Agent").contains("MSIE"))style="width:19.5em"#end &gt;
          &lt;/p&gt;
          ##
          ##
          #set($f="firstName")
          &lt;p class="textfield #computeTrClasses($f)"
                onmouseover="#if($tool.providerId)Curriki.ui.login.displayInstruction('join.member_social_prefilled_tooltip',['${tool.providerId}']);#else Curriki.ui.login.displayInstruction(''); #end"&gt;
              &lt;label for="${f}_input"&gt;&lt;b&gt;$msg.get("join.member_first_name")&lt;/b&gt;&lt;/label&gt;
              &lt;input id="${f}_input" name="${f}" value="$!{tool.firstName}"##
                     #if($provider)disabled="disabled" #end##
                autocomplete="off"&gt;
          &lt;/p&gt;
          ##
          ##
          #set($f="lastName")
          &lt;p class="textfield #computeTrClasses($f)"
                 onmouseover="#if($tool.providerId)Curriki.ui.login.displayInstruction('join.member_social_prefilled_tooltip',['${tool.providerId}']);#else Curriki.ui.login.displayInstruction(''); #end"&gt;
              &lt;label for="${f}_input"&gt;&lt;b&gt;$msg.get("join.member_last_name")&lt;/b&gt;&lt;/label&gt;
              &lt;input id="${f}_input" name="${f}" value="$!{tool.lastName}" ##
                     #if($provider)disabled="disabled" #end##
                autocomplete="off"&gt;
          &lt;/p&gt;
          ##
          ##
          #set($f="email")
          &lt;p class="textfield #computeTrClasses($f)"
                 onmouseover="#if($tool.providerId)Curriki.ui.login.displayInstruction('join.member_social_prefilled_tooltip',['${tool.providerId}']);#else Curriki.ui.login.displayInstruction(''); #end"&gt;
              &lt;label for="${f}_input"&gt;&lt;b&gt;$msg.get("join.member_email")&lt;/b&gt;&lt;/label&gt;
              &lt;input id="${f}_input" name="${f}" value="$!{tool.email}" ##
                     #if($provider)disabled="disabled" #end##
              &gt;
          &lt;/p&gt;
          ##
          ##
          ## This is a honeypot field for spam bots
          ## and should never be filled in by humans.
          #set($f="email_confirmation")
          &lt;p class="textfield #computeTrClasses($f) email_confirmation"&gt;
              &lt;label for="${f}_input"&gt;&lt;b&gt;$msg.get("join.member_email_confirm")&lt;/b&gt;&lt;/label&gt;
              &lt;input id="${f}_input" name="${f}" value=""&gt;
          &lt;/p&gt;
          ##
          ##
              #set($f="country")
              &lt;p class="textfield #computeTrClasses($f)"
                 onmouseover="#if($tool.providerId)Curriki.ui.login.displayInstruction('join.member_social_prefilled_tooltip',['${tool.providerId}']);#else Curriki.ui.login.displayInstruction(''); #end"&gt;
                  &lt;label for="${f}_input"&gt;&lt;b&gt;$msg.get("join.member.country.title")&lt;/b&gt;&lt;/label&gt;
                  #set($propVals=$xwiki.getClass("XWiki.XWikiUsers").get("country").getPropertyClass().getList($context.context))
                  &lt;select name="${f}" id="${f}_input" onchange="Curriki.ui.login.countryChanged()" style="width:20em; max-width: 20em"&gt;##
                      #foreach($val in $propVals)#if($val!="0" &amp;&amp; "$val"!="---")##
                          &lt;option value="$val" #if($val==$!tool.country)selected="selected"#end&gt;$msg.get("XWiki.XWikiUsers_country_${val}")&lt;/option&gt;##
                      #end#end
                  &lt;/select&gt;
              &lt;/p&gt;
              ##
              #set($f="postalCode")
              #if("US"==$!tool.country)#set($isInUS=true)#else#set($isInUS=false)#end
              &lt;p class="#if($isInUS)hidden#end #computeTrClasses($f) " id="extraLocationSectionUS"
                  onmouseover="#if($tool.providerId)Curriki.ui.login.displayInstruction('join.member_social_prefilled_tooltip',['${tool.providerId}']);#else Curriki.ui.login.displayInstruction(''); #end"&gt;
                  &lt;label for="postalCode_input"&gt;&lt;b&gt;$msg.get("join.member.postalCode_US")&lt;/b&gt;&lt;/label&gt;
                  &lt;input type="text" maxlength="5" name="postalCode" id="postalCode_input" value="$!tool.postalCode" style="width:5em"&gt;
                  &lt;span id="postalCode_results"&gt;&amp;nbsp;&lt;/span&gt;
              &lt;/p&gt;
              #set($f="state")
              &lt;p class="textfield  #if($isInUS)#else hidden#end #computeTrClasses($f) " id="extraLocationSectionNonUS"&gt;
                  &lt;label for="${f}_input"&gt;&lt;b&gt;$msg.get("join.member.province.title")&lt;/b&gt;&lt;/label&gt;
                  &lt;input id="${f}_input" name="${f}" value="$!tool.state"&gt;
              &lt;/p&gt;
              &lt;input type="hidden" name="city" id="city_input" value="$!tool.city"&gt;
              &lt;input type="hidden" name="latitude" id="latitude_input" value="$!tool.latitude"&gt;
              &lt;input type="hidden" name="longitude" id="longitude_input" value="$!tool.longitude"&gt;
          ##
          ##
          #set($f="memberType")
          &lt;p class="textfield #computeTrClasses($f)" onmouseover="Curriki.ui.login.displayInstruction('join.member_type_instructions');"&gt;
              &lt;label for="${f}_input"&gt;&lt;b&gt;$msg.get("join.member_type")&lt;/b&gt;&lt;/label&gt;
              #set($propVals=$xwiki.getClass("XWiki.XWikiUsers").get("member_type").getPropertyClass().getList($context.context))
              &lt;select name="member_type" id="${f}_input" onchange="Curriki.ui.login.memberTypeChanged()"&gt;##
                  #set($val="-")##
                  &lt;option value="$val" #if($val==$!tool.memberType)selected="selected"#end&gt;$msg.get("join.member_type_instructions")&lt;/option&gt;##
                  #foreach($val in $propVals)#if($val!="0" &amp;&amp; $val!="corporation")##
                  &lt;option value="$val" #if($val==$!tool.memberType)selected="selected"#end&gt;$msg.get("XWiki.XWikiUsers_member_type_${val}")&lt;/option&gt;##
                  #end#end
              &lt;/select&gt;
          &lt;/p&gt;
          &lt;p class="warning" id="memberTypeNotice"&gt;&amp;nbsp;&lt;/p&gt;
          ##
          ##
          #set($f="agree")
          &lt;p class="#computeTrClasses($f) fullwidth" onmouseover="Curriki.ui.login.displayInstruction('join.member_agreement_instructions');"&gt;
                  &lt;label style="float: none; width:100%"&gt;
                      &lt;input type="checkbox" name="agree"##
                              #if($request.agree)checked #end &gt;##
                      $msg.get("join.member_agreement").replaceFirst("_","&lt;a target='curriki-terms' href='$msg.get('join.member_privacy_policy_url')'&gt;").replaceFirst("_","&lt;/a&gt;").replaceFirst("_","&lt;a target='curriki-terms' href='$msg.get('join.member_terms_service_url')'&gt;").replaceFirst("_","&lt;/a&gt;")
                  &lt;/label&gt;
          &lt;/p&gt;
          &lt;p align="right"&gt;
              &lt;input type="submit" value="$msg.get("join.member.save_button")" class="button-orange"&gt;
              &lt;input type="button" value="$msg.get("join.member.cancel_button")"  class="button-grey" onclick="window.open('$targets.noLogin','_top')"&gt;### TODO: warning in case of cancel
          &lt;/p&gt;
      ##&lt;/fieldset&gt;
  &lt;/div&gt;
&lt;/form&gt;
&lt;script type="text/javascript"&gt;
    Ext.onReady(function() {
        Curriki.ui.login.liveValidation.activate(["username_input", "email_input","firstName_input","lastName_input","password_input","postalCode_input"]);
    }, Curriki.ui.login.liveValidation);

    Ext.onReady(function() {
        Curriki.ui.login.hideLoginLoading();
    });

    scheduleDialogRescale(window, document, "loginIframe", 500,0);
    Curriki.ui.login.memberTypeChanged = function () {
        try {
            var p = Ext.get("memberTypeNotice");
            var s = Ext.get("memberType_input");
            if(!p || !s) {
                Curriki.console.log("Can't find elements. Stopping.");
                return;
            }
            var text = ' ';
            if(s &amp;&amp; s.dom.value &amp;&amp;
                    ("corporation"==s.dom.value)) {
                text = _('join.member_type_coporate_instructions');
            }
            Curriki.console.log("memberTypeNotice: " + text);
            Ext.get("memberTypeNotice").dom.innerHTML= text;
            Curriki.logEvent(['Registration', 'member-type-changed', s.dom.value])
        } catch(e) { Curriki.console.log(e); }
    };
    ##
    Curriki.ui.login.countryChanged = function () {
        try {
            var i = Ext.get("country_input");
            if(i &amp;&amp; i.dom.value) {
                if("US"== i.dom.value) {
                    Ext.get("extraLocationSectionUS").replaceClass("hidden","visible")
                    Ext.get("extraLocationSectionNonUS").replaceClass("visible","hidden")
                } else {
                    Ext.get("extraLocationSectionUS").replaceClass("visible","hidden")
                    Ext.get("extraLocationSectionNonUS").replaceClass("hidden","visible")
                }
                scheduleDialogRescale(window, document, "loginIframe", 500,0);
            }
        } catch(e) { Curriki.console.log(e); }
    };
    ##
    Curriki.ui.login.displayInstruction = function(key,params) {
        try {
            var text;
            if(params) text = _(key,params);
                else text = _(key)
            if(!text || text=="") text=" "; // warning nbsp in this quote
            Ext.get("currikiRegistrationAdvice").dom.innerHTML = text;
        } catch(e) { Curriki.console.log(e); }
    };
    ##
    ##
    Ext.onReady(function() {
        //
        // do it after load: the warning must be displayed in case
        Curriki.ui.login.memberTypeChanged();
        Curriki.ui.login.countryChanged();
    });
&lt;/script&gt;
{/pre}
</content></xwikidoc>