{{velocity}}#verbatim_start()
#activatefullscreen()
## ---------- PREAMBLE, CHECK AUTHORIZATION ----------
##
##UNCOMMENT-TO-USE-LOCAL-STYLESHEET <link rel="stylesheet" href="/xwiki/bin/view/CreateResources/styleG?xpage=plain" type="text/css" />
##
#if( $context.user=="XWiki.XWikiGuest" )
  #set( $logredir = $xwiki.getRequestURL() )
  #set( $url = $xwiki.getURL("XWiki.XWikiLogin","login","xredirect=$logredir") )
  $msg.get("createresources.needaccount", [$url])
#else
  ##
  ## ----- OK, WE HAVE AUTHORITY SETUP THE FORM POST/GET ETC  -----
  ##
  #includeMacros("CreateResources.StyledMacros20")
  ##  parameters passed by other forms or itself
  #set( $pageName   = $request.getParameter("pageName") )
  #set( $cameFrom   = $request.getParameter("cameFrom") )
  #set( $flow       = $request.getParameter("flow") )
  #set( $parentPage = $request.getParameter("parentPage") )
  #set( $publishSpace = $request.getParameter("publishSpace") )
## DEBUG DEBUG DEBUG
## <p>( before setting newAsset '$!request.page $request.method ): newTextAsset: '$!newTextAsset' , newAsset: '$!newAsset' , pageName: '$!pageName' , cameFrom: '$!cameFrom' , flow: '$!flow' , parentPage: '$!parentPage' , publishSpace: '$!publishSpace'</p>
## DEBUG DEBUG DEBUG
  #if( "$!pageName" != "" )
     ## pageName is name of previously created asset, get it and use it.
     #set( $newAsset  = $xwiki.curriki.fetchAsset($pageName) )
  #else
    ## empty pageName means no asset... so create new one. This is "default" action
     #set( $newAsset = $xwiki.curriki.createAsset($xwiki.null) )
     ## note-below: <input type="hidden"  name="pageName"    value="$!newAsset.fullName"  />
     ## so followup POSTs set pageName to newly created asset, i.e. condition below:
  #end
  #if( "$!newAsset"=="" )
    #if( "$!pageName" != "" )<p>asset creation error:</p>#else<p>asset lookup error:</p>#end
    <dl>
      <dt>request.method</dt><dd>$!request.method</dd>
      <dt>request.page</dt><dd>$!request.page</dd>
      <dt>getParameter("pageName")</dt><dd>$!pageName</dd>
      <dt>getParameter("cameFrom")</dt><dd>{pre}$!cameFrom{/pre}</dd>
      <dt>getParameter("flow")</dt><dd>$!flow</dd>
      <dt>getParameter("parentPage")</dt><dd>$!parentPage</dd>
      <dt>getParameter("publishSpace")</dt><dd>$!publishSpace</dd>
    </dl>
  #else
  ## create or get newTextAsset -- used to display WYSIWYG editor
  #if( !$newAsset.getObject("CurrikiCode.TextAssetClass") )
    ## create TextAssetClass for use by WYSIWYG
    #set( $newTextAsset = $newAsset.newObject("CurrikiCode.TextAssetClass") )
  #else
    ## fetch existing TextAssetClass for use by WYSIWYG
    #set( $newTextAsset = $newAsset.getObject("CurrikiCode.TextAssetClass") )
  #end
## DEBUG DEBUG DEBUG
## <p>( '$!request.page $request.method ): newTextAsset: '$!newTextAsset' , newAsset: '$!newAsset' , pageName: '$!pageName' , cameFrom: '$!cameFrom' , flow: '$!flow' , parentPage: '$!parentPage' , publishSpace: '$!publishSpace'</p>
## DEBUG DEBUG DEBUG
##
## ---------- JAVASCRIPT SPECIFICALLY FOR THIS FORM ----------
##
<script language="javascript" type="text/javascript">
/* <![CDATA[ */
// 
// set and clear the unload dialog.
// 
var needUnloadDialog = false;
function clearUnloadDialog() {
  // window.onbeforeunload = null;
  // Ext.EventManager.on(window, 'beforeunload', void);
  needUnloadDialog = false;
}
//
// window.onbeforeunload -- warn of data-loss
//
function onWindowUnloading(e) {
  // if the form is not "dirty" don't pop form.leaving.dialog
  if (needUnloadDialog && checkSimpleResourceDirty()) {
    e.browserEvent.returnValue = "$msg.get('form.leaving.dialog')";
  }
}
//
// Note that setUnloadDialog() called at bottom of page...
//
function setUnloadDialog() {
  // window.onbeforeunload = unloadDialog;
  Ext.EventManager.on(window, 'beforeunload', onWindowUnloading); 
  needUnloadDialog = true;
}
/* ]]> */
</script>
#set ($discard = $xwiki.jsfx.use('js/yui/yahoo/yahoo-min.js'))
#set ($discard = $xwiki.jsfx.use('js/yui/treeview/treeview-min.js'))
#set ($discard = $xwiki.jsfx.use('js/yui/treeview/checknode.js'))
#set ($discard = $xwiki.jsx.use("CreateResources.StyledMacros20", {'minify': false}))
#set( $noDialogs = $request.getParameter("noDialogs") )  ## ?noDialogs=1 turns off add-path dialogs, for testing, or to enable "edit-again"
##
## -------------------- THE MAIN DISPLAY --------------------
##
<div class="header"><p></p>
<h2>$msg.get("form.html.scratch.title"))</h2>
<p>$msg.get("form.html.scratch.title.description") <a href="$msg.get('form.html.title.description.link1.url')" target="_blank">$msg.get("form.html.title.description.link1")</a><span class="separator">&nbsp;|&nbsp;</span><a href="$msg.get('form.html.title.description.link3.url')" target="_blank">$msg.get("form.html.title.description.link3")</a><span class="separator">&nbsp;|&nbsp;</span><img src="$msg.get('form.html.title.description.link2.thumbnail')" align="middle"><a href="$msg.get('form.html.title.description.link2.url')" target="_blank">$msg.get("form.html.title.description.link2")</a>
<br />$msg.get("form.required.fields.instruction")</p>
</div>
##
## --------------------FORM ITSELF --------------------
##
## NB: default action goes back to this form, which shouldnt happen, because,
## after successful validation via call to checkSimpleResourceForm(), the button
## below sets document.forms.inline.action='$msg.get("form.done.url")'
##
<form action="" class="curriki-form1" id="inline" method="post" onsubmit="rewireText()">
## 
## Xredirect foo 
##
<input type="hidden" name="xredirect" value="$xwiki.getFormEncoded($xwiki.getRequestURL())" />
##
## XWiki.AssetClass_0_category is a "fake" property named "category" in XWiki.AssetClass.
## This is forced here to value "text". This hidden field is passed to AssetDone 
## via POST and instantiated via .updateObjectFromRequest("XWiki.AssetClass")
<input type="hidden"  name="CurrikiCode.AssetClass_0_category" id="CurrikiCode.AssetClass_0_category" value="text" /> 
## successMessage is a hidden field that is set to a string in validation javascript
## after successful validation. If AssetDone gets a POST with the default value of "" set here
## it will ignore the post as it means it's not validated.
<input type="hidden" name="successMessage" id="successMessage" value="" />
<input type="hidden" name="page"         value="$!request.page" />
<input type="hidden" name="pageName"     value="$!newAsset.fullName" />
<input type="hidden" name="publishSpace" value="$!publishSpace" />
<input type="hidden" name="parentPage"   value="$!parentPage" />
#if( "$!noDialogs"!="" )
  ## when ?noDialogs=... argument set, pass it on to AssetDone
  <input type="hidden" name="noDialogs" value="$noDialogs" />
#else
  ## -- ?noDialogs... not set, pass parameters used for add-path dialogs
  <input type="hidden"  name="flow"    value="$!flow"      />
  <input type="hidden"  name="createLessonURL"    value="$msg.get('form.html.scratch.url')"  /> ## for ICT
  <input type="hidden"  name="cameFrom"
  #if( "$!cameFrom"=="" )
   value="$msg.get('form.html.scratch.url')" ## default cameFrom to this form
  #else
   value="$!cameFrom" ## pass along cameFrom
  #end
  />
#end
#####################################################################
#curriki20_formpart_begin($msg.get("form.html.scratch.step1.header"))
#curriki20_forminstructions($msg.get("form.html.scratch.step1.instruction"))
#curriki20_formprompt($msg.get("form.html.scratch.title_title"), $msg.get("form.html.scratch.title_tooltip"), $msg.get("form.html.scratch.title_txt"), true, "medium")
##$newAsset.display("title","edit")
<input type="text" id="CurrikiCode.AssetClass_0_title" name="CurrikiCode.AssetClass_0_title" maxlength="$msg.get("resource.title.maxlength")" />
#curriki20_formprompt($msg.get("form.html.scratch.description_title"), $msg.get("form.html.scratch.description_tooltip"), $msg.get("form.html.scratch.description_txt"), true, "medium")
$newAsset.display("description","edit")
<table class="subject-educational"><tbody><tr><td>
#curriki20_formprompt($msg.get("sri.fw_items_title"), $msg.get("sri.fw_items_tooltip"), $msg.get("sri.fw_items_txt"), true, "")
$newAsset.display("fw_items","edit")
</td><td>
#curriki20_formprompt($msg.get("sri.educational_level_title"), $msg.get("sri.educational_level_tooltip"), $msg.get("sri.educational_level_txt"), true, "medium")
$newAsset.display("educational_level","edit")
</td></tr></tbody></table> ##class="subject-educational"
#curriki20_formprompt($msg.get("sri.instructional_component2_title"), $msg.get("sri.instructional_component2_tooltip"), $msg.get("sri.instructional_component2_txt"), true, "medium")
$newAsset.display("instructional_component","edit")
#curriki20_formprompt($msg.get("sri.keywords_title"), $msg.get("sri.keywords_tooltip"), $msg.get("sri.keywords_txt"), false, "medium")
$newAsset.display("keywords","edit")
#curriki20_formprompt($msg.get("sri.language_title"), $msg.get("sri.language_tooltip"), $msg.get("sri.language_txt"), false, "medium")
$newAsset.display("language","edit")
#curriki20_formpart_end()
#####################################################################
#curriki20_formpart_begin($msg.get("form.html.scratch.step2.header")) ## {
#curriki20_forminstructions($msg.get("form.html.scratch.step2.instruction"))
#curriki20_formprompt($msg.get("form.html.scratch.step2.content.title"), "", $msg.get("form.html.scratch.step2.content.instruction"), true, "medium")
<textarea id='slp_text' name='slp_text' style='height: 450px'></textarea>
#curriki20_formpart_end()
#####################################################################
#curriki20_createresources_step3()
#####################################################################
#curriki20_formpart_begin($msg.get("form.scratch.step4.header"))
<p><label>$msg.get("form.scratch.step4.instruction")</label></p>
<p class="links">
<button class="button-orange" onclick="try { if (document.forms.inline.onsubmit) document.forms.inline.onsubmit(); if (checkSimpleResourceForm()) { clearUnloadDialog(); startWaitingDialog(); document.forms.inline.action='$msg.get("form.done.url")'; document.forms.inline.submit(); } return false; } catch(e) { alert('$msg.get("form.scratch.submit.button") button onclick error: '+e+' ...'); return false; }">$msg.get("form.scratch.submit.button")</button>
#if( "$!cameFrom" != "" )
  #set( $cancelURL = $cameFrom )
#else
  #set( $cancelURL = $xwiki.getURL("Main.WebHome") ) ## cameFrom not set means go to WebHome
#end
<button class="cancel" onclick="try { clearUnloadDialog(); window.location.href='{pre}$cancelURL{/pre}'; return false; } catch(e) { alert('$msg.get("form.scratch.cancel.button") button onclick error: '+e+' ...'); return false; }">$msg.get("form.scratch.cancel.button")</button>
</p>
#curriki20_formpart_end()
#####################################################################
<div class="tooltips">$xwiki.addTooltipJS()</div>
</form>
#set( $noWYSIWYG  = $request.getParameter("noWYSIWYG") ) ##For testing,etc, add parameter ?noWYSIWYG=1 to force WYSIWYG editors to not display, and use TEXTAREA instead
#if( "$!noWYSIWYG" == "" )

#set ($parameters = $util.hashMap)
#wysiwyg_storeConfig($parameters $newAsset "slp_text" true)
#set ($discard = $parameters.put('syntax', 'xhtml/1.0'))
#set ($discard = $parameters.put('convertInput', false))
#wysiwyg_editPropertyCustom($newAsset $parameters)

#if( "$!publishSpace"=="" )
  #set( $user = $context.user )
  #if( $user.startsWith("XWiki.") )
    #set( $shortname = $user.substring(6) )
  #else
    #set( $shortname = $user )
  #end
  #set( $wysi_publishSpace = "Coll_${shortname}" )
#else
  #set( $wysi_publishSpace = $publishSpace )
#end  
#end ## -- if "$!noWYSIWYG"==""
<script language="javascript" type="text/javascript">
/* <![CDATA[ */
/*
 * this javascript code  must be at end, otherwise  strange   things
 * happen, like "License Deed" doesn't show up...
 */

var baseURL = document.location.protocol + "//" + document.location.host;
var regexp1 = new RegExp('<!--startimage:(false|true)\\|-\\|attach\\|-\\|([^>]*)--><img src="'+baseURL+'/xwiki/bin/download/AssetTemp/([a-zA-Z0-9]*)/([^?]*)\\?v=[0-9\\.]*(&amp;)?',"g");
var regexp2 = new RegExp("");

function rewireText() {
    var textArea = document.getElementById("slp_text");
    var rewritten = textArea.value;
    rewritten = rewritten.replace(regexp1,'<!--startimage:$1|-|url|-|'+baseURL+'/xwiki/bin/download/AssetTemp/$3/$4--><img src="'+baseURL+'/xwiki/bin/download/AssetTemp/$3/$4?');
    textArea.value = rewritten;
}
function startWaitingDialog() {
#if( "$!noDialogs"!="1" )
  Curriki.showLoading();
#end
}
/*
 * on window unload, dialog warning of dataloss
 */
setUnloadDialog();
/* ]]> */
</script>
#end ## } -- else, aka "$!newAsset"!=""
#end ## } -- $context.user=="XWiki.XWikiGuest"
#verbatim_end(){{/velocity}}
