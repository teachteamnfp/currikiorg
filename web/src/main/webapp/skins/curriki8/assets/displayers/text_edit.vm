#asset_displaycontentheader("")
<div class="asset-display-edit">
  <div class="asset-display-edit-inner">
  <form name="text" action="$xwiki.getURL("CurrikiCode.AssetSaveService", "view")" onsubmit="return beforeAssetSubmit(this);" method="post" >
  #set($xredirect = $xwiki.getFormEncoded($asset.getURL('view', $!request.queryString.replaceAll("viewer=assetedit", ""))))
  <input  type="hidden" name="page" value="$asset.fullName" />
  <input  type="hidden" name="xredirect" value="$xredirect" />
  <fieldset>
  <ul>
  #set($ok = $asset.use("CurrikiCode.TextAssetClass"))
  #set($syntax = $asset.getValue("syntax"))
  #####################
  ##Case of XWiki Syntax 1.0
  #####################
  #if($syntax=="xwiki/1.0")
      #set($useWikiMode = $asset.isAdvancedContent() && !$request.forcewysiwyg)
      <li class="input-textarea">
          #if($useWikiMode)
            ## are not setting up the wysiwyg but instead stay in wiki mode adding a message and a button to switch
            <p class="input-textarea-indication">$msg.get("rve.content.edit.text.instruction_text.wiki_text")</p>
          #else
            <p class="input-textarea-indication">$msg.get("rve.content.edit.text.instruction_text.wiki_wysiwyg")</p>
          #end
          <div id="input-wiki-wysiwyg">
            $asset.getTextArea()
          </div>
      </li>
      #if(!$useWikiMode)
          <script language="javascript" type="text/javascript" src="/xwiki/tiny_mce/tiny_mce.js"></script>
          <script language="javascript" type="text/javascript" src="/xwiki/wiki_editor/wiki_editor.js"></script>
          <script language="javascript" type="text/javascript">
              if ( browser.isIE || browser.isMozilla || browser.isGecko ) {
                  // NLLP Icon
                  var nortelIconHtmlSrc = '<img src="' + '$msg.get("nortel.lesson.plan.output.heading.icon.url")' + '" alt="" width="' + '$msg.get("nortel.lesson.plan.output.heading.icon.width")' + '" height="' + '$msg.get("nortel.lesson.plan.output.heading.icon.height")' + '" />';
                  wikiEditor.addExternalProcessor((/\u0023currikiNortelIcon\(\)/g), nortelIconHtmlSrc);
                  var reg = new RegExp(nortelIconHtmlSrc.replace('/xwiki/bin/', '../../').replace('/', '\/'),"g");
                  wikiEditor.addInternalProcessor(reg, '\u0023currikiNortelIcon()');
                  // ACELP Icon
                  var aceIconHtmlSrc = '<img src="' + '$msg.get("ace.lesson.plan.output.heading.icon.url")' + '" alt="" width="' + '$msg.get("ace.lesson.plan.output.heading.icon.width")' + '" height="' + '$msg.get("ace.lesson.plan.output.heading.icon.height")' + '" />';
                  wikiEditor.addExternalProcessor((/\u0023currikiACELPIcon\(\)/g), aceIconHtmlSrc);
                  var aceReg = new RegExp(aceIconHtmlSrc.replace('/xwiki/bin/', '../../').replace('/', '\/'),"g");
                  wikiEditor.addInternalProcessor(aceReg, '\u0023currikiACELPIcon()');
                  // EfSLP Icon
                  var efsIconHtmlSrc = '<img src="' + '$msg.get("efs.title.learn.link4.thumbnail")' + '" alt="" width="68" height="64" align="middle" />';
                  wikiEditor.addExternalProcessor((/\u0023currikiEfSLPIcon\(\)/g), efsIconHtmlSrc);
                  var efsReg = new RegExp(efsIconHtmlSrc.replace('/xwiki/bin/', '../../').replace('/', '\/'),"g");
                  wikiEditor.addInternalProcessor(efsReg, '\u0023currikiEfSLPIcon()');
                  // wiki editor init
                  wikiEditor.init({
                      language: "en",
                      elements : "content",
                      mode: "exact",
                      safari_warning : false,
                      content_css: "$xwiki.getSkinFile("style.css", true)",
                      debug : false,
                      remove_linebreaks : false,
                      plugins: 'table, contextmenu, paste, searchreplace',
                      wiki_images_path : '${request.contextPath}/bin/download/$asset.space/$asset.name/',
                      wiki_attach_path : '${request.contextPath}/bin/view/$asset.space/$asset.name',
                      wiki_macro_path : '${request.contextPath}/bin/view/$asset.space/$asset.name',
                      wiki_plugins: 'core,attachments'
                  });
              } else {
                  //alert("$msg.get('browsernoncompatible')");
                  Ext.onReady(function() {
                      var hintsParas = Ext.select(".input-textarea-indication").elements;
                      if(hintsParas) hintsParas.each(function(para) {
                          para.innerHTML = '$!{msg.get("rve.content.edit.text.instruction_text.wiki_text_browsernoncompatible")}';
                      });
                  });
              }
          </script>
      #end
  #####################
  ##Case of XWiki Syntax 2.0 or 2.1
  #####################
  #elseif($syntax=="xwiki/2.0" || $syntax=="xwiki/2.1")
    #set($useWikiMode = $asset.isAdvancedContent() && !$request.forcewysiwyg)
    <li class="input-textarea">
    #if($useWikiMode)
      ## are not setting up the wysiwyg but instead stay in wiki mode adding a message and a button to switch
      <p>$msg.get("rve.content.edit.text.instruction_text.wiki_text")</p>
    #else
      <p class="input-textarea-indication">$msg.get("rve.content.edit.text.instruction_text.wiki_wysiwyg")</p>
    #end
      <div id="input-wiki-wysiwyg">$asset.getTextArea()</div>
    </li>
    #if(!$useWikiMode)<!-- editting wiki with wyiswyg editor -->
      #wysiwyg_editProperty($asset "content" true)
    #end
  #elseif($syntax=="xhtml/1.0")
    <li class="input-textarea">
      <p class="input-textarea-indication">$msg.get("rve.content.edit.text.instruction_text.html_wysiwyg")</p>
      <div id="input-html-wysiwyg">
        $asset.getTextArea()
        ## hidden textarea to update wysiwyg editor with html content after fail on HTMLConverter
        <textarea id='html_text' name='html_text' class='hidden'>$asset.content</textarea>
      </div>
    </li>
    #set($parameters = $util.hashMap)
    #wysiwyg_storeConfig($parameters $asset "content" true)
    #set ($discard = $parameters.put('syntax', 'xhtml/1.0'))
    #set ($discard = $parameters.put('convertInput', false))
    #wysiwyg_editPropertyCustom($asset $parameters)
  #else
    <li class="input-textarea">
      <div id="input-text-wysiwyg">$asset.getTextArea()</div>
    </li>
  #end
  #asset_edit_revision()
  </ul>
  </fieldset>
  <hr>
  #asset_edit_buttons($asset true)
  </form>
  ## this allows to check for changes
  #curriki_clickawayjs("text" $xwiki.curriki.escapeForJS($msg.get("rve.content.edit.warning.message_text")))
  </div>
</div>
#asset_displaycontentfooter()
